[ParkingReservationRequest(reservedBy=null, startTime=null, endTime=null), , ] => java.lang.NullPointerException: Cannot invoke "java.time.temporal.Temporal.until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit)" because "startInclusive" is null 
[ParkingReservationRequest(reservedBy=null, startTime=null, endTime=null), , ] => java.lang.NullPointerException: Cannot invoke "java.time.temporal.Temporal.until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit)" because "startInclusive" is null 
[ParkingReservationRequest(reservedBy=null, startTime=null, endTime=null), , ] => java.lang.NullPointerException: Cannot invoke "java.time.temporal.Temporal.until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit)" because "startInclusive" is null 
[ParkingReservationRequest(reservedBy=null, startTime=null, endTime=null), , ] => java.lang.NullPointerException: Cannot invoke "java.time.temporal.Temporal.until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit)" because "startInclusive" is null 
[ParkingReservationRequest(reservedBy=Olly, startTime=null, endTime=null), , ] => java.lang.NullPointerException: Cannot invoke "java.time.temporal.Temporal.until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit)" because "startInclusive" is null 
[ParkingReservationRequest(reservedBy=Olly, startTime=null, endTime=null), , ] => java.lang.NullPointerException: Cannot invoke "java.time.temporal.Temporal.until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit)" because "startInclusive" is null 
[ParkingReservationRequest(reservedBy=Olly, startTime=null, endTime=null), , ] => java.lang.NullPointerException: Cannot invoke "java.time.temporal.Temporal.until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit)" because "startInclusive" is null 
[ParkingReservationRequest(reservedBy=Olly, startTime=null, endTime=null), , ] => java.lang.NullPointerException: Cannot invoke "java.time.temporal.Temporal.until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit)" because "startInclusive" is null 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T01:01, endTime=null), , ] => java.lang.NullPointerException: temporal 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T01:01, endTime=null), , ] => java.lang.NullPointerException: temporal 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T01:01, endTime=null), , ] => java.lang.NullPointerException: temporal 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T01:01, endTime=null), , ] => java.lang.NullPointerException: temporal 
[ParkingReservationRequest(reservedBy=Olly, startTime=null, endTime=2020-01-01T08:01), , ] => java.lang.NullPointerException: Cannot invoke "java.time.temporal.Temporal.until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit)" because "startInclusive" is null 
[ParkingReservationRequest(reservedBy=Olly, startTime=null, endTime=2020-01-01T08:01), , ] => java.lang.NullPointerException: Cannot invoke "java.time.temporal.Temporal.until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit)" because "startInclusive" is null 
[ParkingReservationRequest(reservedBy=Olly, startTime=null, endTime=2020-01-01T08:01), , ] => java.lang.NullPointerException: Cannot invoke "java.time.temporal.Temporal.until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit)" because "startInclusive" is null 
[ParkingReservationRequest(reservedBy=Olly, startTime=null, endTime=2020-01-01T08:01), , ] => java.lang.NullPointerException: Cannot invoke "java.time.temporal.Temporal.until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit)" because "startInclusive" is null 
[ParkingReservationRequest(reservedBy=null, startTime=2020-01-01T08:00, endTime=2020-01-01T08:01), , ] => Body: Reservation must be at least 30 minutes long. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=null, startTime=2020-01-01T08:00, endTime=2020-01-01T08:01), , ] => Body: Reservation must be at least 30 minutes long. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=null, startTime=2020-01-01T08:00, endTime=2020-01-01T08:01), , ] => Body: Reservation must be at least 30 minutes long. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=null, startTime=2020-01-01T08:00, endTime=2020-01-01T08:01), , ] => Body: Reservation must be at least 30 minutes long. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T19:05, endTime=2020-01-01T08:10), , ] => Body: Reservation must be at least 30 minutes long. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T19:05, endTime=2020-01-01T08:10), , ] => Body: Reservation must be at least 30 minutes long. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T19:05, endTime=2020-01-01T08:10), , ] => Body: Reservation must be at least 30 minutes long. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T19:05, endTime=2020-01-01T08:10), , ] => Body: Reservation must be at least 30 minutes long. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T08:00, endTime=2020-01-01T08:01), , ] => Body: Reservation must be at least 30 minutes long. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T08:00, endTime=2020-01-01T08:01), , ] => Body: Reservation must be at least 30 minutes long. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T08:00, endTime=2020-01-01T08:01), , ] => Body: Reservation must be at least 30 minutes long. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T08:00, endTime=2020-01-01T08:01), , ] => Body: Reservation must be at least 30 minutes long. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T19:00, endTime=2020-01-01T22:01), , ] => Body: Reservations can only be made between 6:00 AM and 10:00 PM. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T19:00, endTime=2020-01-01T22:01), , ] => Body: Reservations can only be made between 6:00 AM and 10:00 PM. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T19:00, endTime=2020-01-01T22:01), , ] => Body: Reservations can only be made between 6:00 AM and 10:00 PM. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T19:00, endTime=2020-01-01T22:01), , ] => Body: Reservations can only be made between 6:00 AM and 10:00 PM. status code: 400 BAD_REQUEST 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T08:00, endTime=2020-01-01T08:30), , ] => Body: You already have an active reservation. status code: 409 CONFLICT 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T08:00, endTime=2020-01-01T08:30), , ] => Body: You already have an active reservation. status code: 409 CONFLICT 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T08:00, endTime=2020-01-01T08:30), , ] => Body: No available spot left. status code: 404 NOT_FOUND 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T08:00, endTime=2020-01-01T08:30), , ] => Body: ParkingReservationResponse(reservationId=null, spotId=null, reservedBy=Olly, startTime=2020-01-01T08:00, endTime=2020-01-01T08:30) status code: 201 CREATED 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T08:00, endTime=2020-01-01T08:31), , ] => Body: You already have an active reservation. status code: 409 CONFLICT 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T08:00, endTime=2020-01-01T08:31), , ] => Body: You already have an active reservation. status code: 409 CONFLICT 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T08:00, endTime=2020-01-01T08:31), , ] => Body: No available spot left. status code: 404 NOT_FOUND 
[ParkingReservationRequest(reservedBy=Olly, startTime=2020-01-01T08:00, endTime=2020-01-01T08:31), , ] => Body: ParkingReservationResponse(reservationId=null, spotId=null, reservedBy=Olly, startTime=2020-01-01T08:00, endTime=2020-01-01T08:31) status code: 201 CREATED 
